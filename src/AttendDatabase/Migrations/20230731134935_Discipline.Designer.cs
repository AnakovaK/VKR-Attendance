// <auto-generated />
using System;
using AttendDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RTUAttendAPI.AttendDatabase.Models;

#nullable disable

namespace AttendDatabase.Migrations
{
    [DbContext(typeof(AttendDbContext))]
    [Migration("20230731134935_Discipline")]
    partial class Discipline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "student_membership_role", new[] { "unknown", "student", "elder", "vice_elder" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "student_membership_type", new[] { "unknown", "active", "inactive" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DisciplineVisitingLog", b =>
                {
                    b.Property<Guid>("DisciplineId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VisitingLogsId")
                        .HasColumnType("uuid");

                    b.HasKey("DisciplineId", "VisitingLogsId");

                    b.HasIndex("VisitingLogsId");

                    b.ToTable("DisciplineVisitingLog");
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.Discipline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("discipline", (string)null);
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("semester_pkey");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("semester", (string)null);
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.StudentMembership", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<StudentMembershipRole>("MembershipRole")
                        .HasColumnType("student_membership_role")
                        .HasColumnName("membership_role");

                    b.Property<StudentMembershipType>("MembershipType")
                        .HasColumnType("student_membership_type")
                        .HasColumnName("membership_type");

                    b.Property<Guid?>("NsiStudentId")
                        .HasColumnType("uuid")
                        .HasColumnName("nsi_student_id");

                    b.Property<Guid>("VisitingLogId")
                        .HasColumnType("uuid")
                        .HasColumnName("visiting_log_id");

                    b.HasKey("Id")
                        .HasName("student_membership_pkey");

                    b.HasIndex("VisitingLogId");

                    b.HasIndex("NsiStudentId", "VisitingLogId")
                        .IsUnique()
                        .HasDatabaseName("student_membership_student_in_group_once");

                    b.ToTable("student_membership", (string)null);
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.VisitingLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_archived");

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid")
                        .HasColumnName("semester_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("visiting_log_pkey");

                    b.HasIndex("SemesterId");

                    b.ToTable("visiting_log", (string)null);
                });

            modelBuilder.Entity("DisciplineVisitingLog", b =>
                {
                    b.HasOne("RTUAttendAPI.AttendDatabase.Models.Discipline", null)
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RTUAttendAPI.AttendDatabase.Models.VisitingLog", null)
                        .WithMany()
                        .HasForeignKey("VisitingLogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.StudentMembership", b =>
                {
                    b.HasOne("RTUAttendAPI.AttendDatabase.Models.VisitingLog", "VisitingLog")
                        .WithMany("StudentMemberships")
                        .HasForeignKey("VisitingLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VisitingLog");
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.VisitingLog", b =>
                {
                    b.HasOne("RTUAttendAPI.AttendDatabase.Models.Semester", "Semester")
                        .WithMany("VisitingLogs")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.Semester", b =>
                {
                    b.Navigation("VisitingLogs");
                });

            modelBuilder.Entity("RTUAttendAPI.AttendDatabase.Models.VisitingLog", b =>
                {
                    b.Navigation("StudentMemberships");
                });
#pragma warning restore 612, 618
        }
    }
}
